#include <Wire.h>

long  accelX, accelY, accelZ;
float gForceX, gForceY, gForceZ, gForce;
float angelX = 0, angelY = 0, angelZ = 0;
float a;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  setUpMPU();
}

void loop() {  
  readAndProcessAccelData();
  Serial.println(a);
  
}

void setUpMPU() {
  // power management
  Wire.beginTransmission(0b1101000);          // Start the communication by using address of MPU
  Wire.write(0x6B);                           // Access the power management register
  Wire.write(0b00000000);                     // Set sleep = 0
  Wire.endTransmission();                     // End the communication

  // configure accelerometer
  Wire.beginTransmission(0b1101000);
  Wire.write(0x1C);                           // Access the accelerometer configuration register
  Wire.write(0b00000000);
  Wire.endTransmission();
}

void processAccelData() {
  gForceX = accelX / 16384.0;
  gForceY = accelY / 16384.0;
  gForceZ = accelZ / 16384.0;
  gForce = sqrt(gForceX * gForceX + gForceY * gForceY + gForceZ * gForceZ);
  a = abs((gForce-1.03))*10;

}
void readAndProcessAccelData() {
  Wire.beginTransmission(0b1101000);
  Wire.write(0x3B);
  Wire.endTransmission();
  Wire.requestFrom(0b1101000, 6);
  while (Wire.available() < 6);
  accelX = Wire.read() << 8 | Wire.read();
  accelY = Wire.read() << 8 | Wire.read();
  accelZ = Wire.read() << 8 | Wire.read();
  processAccelData();
}




